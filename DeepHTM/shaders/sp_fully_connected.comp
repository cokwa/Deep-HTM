#version 430

#ifndef EXTERNAL_PARAMETERS
	#define INPUT_COUNT_LOCATION 0
	#define MINICOLUMN_COUNT_LOCATION 1

	#define INPUTS_BINDING 0
	#define MINICOLUMNS_BINDING 1
	#define WEIGHTS_BINDING 2
	#define BIASES_BINDING 3
#endif

layout(location = INPUT_COUNT_LOCATION) uniform uint inputCount;
layout(location = MINICOLUMN_COUNT_LOCATION) uniform uint minicolumnCount;

layout(binding = INPUTS_BINDING) buffer Inputs
{
	float inputs[];
};

layout(binding = MINICOLUMNS_BINDING) buffer Minicolumns
{
	float minicolumns[];
};

layout(binding = WEIGHTS_BINDING) buffer Weights
{
	float weights[];
};

layout(binding = BIASES_BINDING) buffer Biases
{
	float biases[];
};

layout(local_size_x = 1) in;

void main()
{
	const uint globalOutput = gl_WorkGroupID.x + gl_WorkGroupID.y * gl_NumWorkGroups.x;
	uint localOutput = gl_WorkGroupID.x, inputOffset = gl_WorkGroupID.y * inputCount;

	float _output = biases[localOutput];

	for(uint localInput = 0u; localInput < inputCount; localInput++)
	{
		_output += weights[localInput + localOutput * inputCount] * inputs[inputOffset + localInput];
	}

	minicolumns[globalOutput] = _output;
}