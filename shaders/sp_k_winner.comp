#version 430

#ifndef EXTERNAL_PARAMETERS
	#define OUTPUT_SIZE_X 1u
	#define OUTPUT_SIZE_Y 1u
#endif

//collides with macros
uniform uint outputCount, activeOutputCount;

buffer Outputs
{
	float outputs[];
};

buffer ActiveOutputs
{
	uint activeOutputs[];
};

layout(local_size_x = OUTPUT_SIZE_X, local_size_y = OUTPUT_SIZE_Y) in;

//partially sorted
shared uint sortedOutputs[OUTPUT_SIZE_X * OUTPUT_SIZE_Y];

void main()
{
	uint outputOffset = (gl_WorkGroupID.x + gl_WorkGroupID.y * gl_WorkGroupSize.x) * outputCount;
	uint activeOutputOffset = (gl_WorkGroupID.x + gl_WorkGroupID.y * gl_WorkGroupSize.x) * activeOutputCount;
	
	for(uint activeOutput = 0u; activeOutput < activeOutputCount; activeOutput++)
	{
		uint left = gl_LocalInvocationIndex, right = gl_LocalInvocationIndex + 1u;
		
		while(right < outputCount)
		{
			if(outputs[sortedOutputs[left]] < outputs[sortedOutputs[right]])
			{
				uint tmp = sortedOutputs[left];
				sortedOutputs[left] = sortedOutputs[right];
				sortedOutputs[right] = tmp;
			}

			memoryBarrier();
			
			left *= 2u;
			right *= 2u;
		}

		if(gl_LocalInvocationID == uvec3(0u))
		{
			activeOutputs[activeOutputOffset + activeOutput] = sortedOutputs[0];
		}
	}
}